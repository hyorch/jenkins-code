# Docker-compose file for Jenkins with Docker support
services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    
    ports:
      - "8080:8080"
      - "50000:50000"
    
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock   
      #- jenkins_plugins:/usr/share/jenkins/ref/plugins
      - ./plugins.txt:/usr/share/jenkins/plugins.txt
    
    command: >
      /bin/sh -c "jenkins-plugin-cli --verbose -f /usr/share/jenkins/plugins.txt \
      && java -jar /usr/share/jenkins/jenkins.war --httpPort=8080"
    
    networks:
      - jenkins_network
  
  docker:
    image: docker:20.10.7
    container_name: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins_network

networks:
  jenkins_network:
    driver: bridge

volumes:
  jenkins_home:
    driver: local
    driver_opts:
      type: none
      device: /var/opt/jenkins_home
      o: bind
  jenkins_plugins:
 

# To run this setup, use the command:
# docker-compose -f docker-compose-did.yaml up -d
# To stop the services, use:
# docker-compose -f docker-compose-did.yaml down
# To view logs, use:
# docker-compose -f docker-compose-did.yaml logs -f
# To scale the Jenkins service, use:
# docker-compose -f docker-compose-did.yaml up -d --scale jenkins=3
# To remove the containers and volumes, use:
# docker-compose -f docker-compose-did.yaml down -v
# To update the Jenkins image, use:
# docker-compose -f docker-compose-did.yaml pull jenkins
# To update the Docker-in-Docker image, use:
# docker-compose -f docker-compose-did.yaml pull docker
# To execute a command in the Jenkins container, use:
# docker-compose -f docker-compose-did.yaml exec jenkins bash