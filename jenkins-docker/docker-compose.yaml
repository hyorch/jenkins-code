# Docker-compose file for Jenkins with Docker support# Docker compose file for Jenkins CI/CD
services:
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - '8090:8080'
      - '50000:50000'

    environment:
      - JAVA_OPTS=-Duser.timezone=Europe/Madrid
    volumes:
      - /var/opt/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins_network
    restart: unless-stopped

  
  docker-agent:
    depends_on:
      - jenkins
    image: jenkins-docker-agent:0.0.1 #nombre y versi√≥n de la imagen creada anteriormente

    environment:
      - JENKINS_URL=http://jenkins:8080
      - JENKINS_SECRET=839axxxxxxxxab #secret obtenido
      - JENKINS_AGENT_NAME=Nodo-Docker # nombre del nodod

    volumes:
      - /var/opt/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock:rw
    
    privileged: true

    networks:
      - jenkins_network
    restart: unless-stopped


networks:
  jenkins_network:
    driver: bridge
 

# To run this setup, use the command:
# docker-compose -f docker-compose-did.yaml up -d
# To stop the services, use:
# docker-compose -f docker-compose-did.yaml down
# To view logs, use:
# docker-compose -f docker-compose-did.yaml logs -f
# To scale the Jenkins service, use:
# docker-compose -f docker-compose-did.yaml up -d --scale jenkins=3
# To remove the containers and volumes, use:
# docker-compose -f docker-compose-did.yaml down -v
# To update the Jenkins image, use:
# docker-compose -f docker-compose-did.yaml pull jenkins
# To update the Docker-in-Docker image, use:
# docker-compose -f docker-compose-did.yaml pull docker
# To execute a command in the Jenkins container, use:
# docker-compose -f docker-compose-did.yaml exec jenkins bash